.\ Manpage for simple_shell.
.\ Contact crismartine.e@gmail.com to correct errors or typos.

.TH man 1 "14 April 2021" "0.1" "simple shell man page" 

.SH SIMPLE_SHELL
It's a command line interpreter that reads lines from either a file or the terminal, interprets them, and generally executes commands.It has direct access to the Kernel.

.SH COMPILATION
This program is intended to be compiled with gcc 4.8.4 using the flags -Wall -Werror -Wextra and -pedantic.

You can use the command 'gcc -Wall -Werror -Wextra -pedantic *.c -o simple_shell'.
This way you can execute the program with './simple_shell'

The 'header.h' file is required to compile this program. 

.SH SYNOPSIS
[ function ] name () compound-command [redirection]

.SH DESCRIPTION
Also, there are 2 ways executing our Shell: interactive and non-interactive. 
That is, commands can be typed directly to the running shell (interactive) or can be put into a file and the file can be executed directly by the shell (non-interactive).

Interactive mode:
The program detects if the program is sent through the built in echo with pipes | to execute it. 
The shell separates the two modes by utilizing isatty() function. isatty() returns 1 if fd is an open file descriptor referring to
a terminal; otherwise 0 is returned and this mode is activated.

The interactive mode allows us to input and execute commands for an infinite amount of times as long as the shell is running and it’s not ‘exit’ or ‘EOF’ (Ctrl + d).
Our interactive Shell will have an infinite loop, where we’ll print the Shell prompt symbol ($) with the write system call.

.SH RETURN
If successful it will return 0 and execute the command. If it doesn't find a command, will return an error, and print a message with: 'File or command not found'.

.SH OPTIONS
Commands you can execute:

ls
Crtl + d
exit
clear

.SH EXAMPLE
non-interactive mode:
dev@Felipe-PC simple_shell ±|main ✗|→ echo ls | ./hsh
2-functions_auxiliars.c  Flowchart_Shell_Interactiva.jpg  a.out       check_executable.c  execute.c              get_path.c  hsh     shell_direc.c  tok_path.c
AUTHORS                  README.md                        argument.c  concat.c            functions_auxiliars.c  header.h    main.c  tok_arg.c
dev@Felipe-PC simple_shell ±|main ✗|→

interactive mode:
dev@Felipe-PC simple_shell ±|main ✗|→ ./hsh
shell $ ls
2-functions_auxiliars.c  Flowchart_Shell_Interactiva.jpg  a.out       check_executable.c  execute.c              get_path.c  hsh     shell_direc.c  tok_path.c
AUTHORS                  README.md                        argument.c  concat.c            functions_auxiliars.c  header.h    main.c  tok_arg.c
shell $

.SH BUGS
There are no documented bugs yet.

.SH AUTHORS
Angel Felipe Vargas, felipevargas.bz@gmail.com
Marcela Areiza, marce.3210@gmail.com
Christian Felipe Martinez, crismartine.e@gmail.com

.SH COPYRIGHT LICENSE
This program doesn't currently have any registered license. This README will reflec any further update.

.SH ADITIONAL DOCUMENTATION
Please go to https://chrismartine-e.medium.com/creating-your-own-linux-shell-1cbaaae2c41c

.SH BIBLIOGRAPHY
Kerrisk, Michael, 2010, The Linux Programming Interface.
Shotts, William, 2019, The Linux Command Line
Wikipedia, Kernel (computer science)
GNU.org, Manuals
GNU.org, The GNU C Library Reference Manual

.SH DATE
April 14th, 2021. 5:27 pm